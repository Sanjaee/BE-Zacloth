generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique   // untuk login
  email     String?   @unique   // opsional, kalau diisi harus unik
  password  String
  role      String    @default("client") // admin atau client
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relasi ke Profile (1-1)
  profile   Profile?

  // Relasi ke Product (1-N)
  products  Product[]
}

model Profile {
  id        String   @id @default(cuid())
  fullName  String              // nama lengkap user
  bio       String?
  avatarUrl String?

  // Media sosial
  instagram String?
  tiktok    String?
  xAccount  String?   // Twitter / X
  facebook  String?
  youtube   String?
  linkedin  String?

  userId    String   @unique

  // Relasi balik ke User
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id             String       @id @default(cuid())
  isOnSale       Boolean
  isNikeByYou    Boolean
  catalogId      String       @unique
  brand          String
  category       String
  cloudProductId String
  color          String
  country        String
  currentPrice   Int
  fullPrice      Int
  name           String
  slug           String       @unique // URL-friendly slug
  prodigyId      String
  imageUrl       String       // Main image (backward compatibility)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  // Relasi ke tabel lain
  genders        Gender[]
  skuData        SkuData[]
  subCategories  SubCategory[]
  images         ProductImage[] // Multiple images

  // Relasi ke User (pemilik produk)
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model SkuData {
  id        String   @id @default(cuid())
  size      String
  sku       String
  gtin      String

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model SubCategory {
  id        String   @id @default(cuid())
  name      String

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model Gender {
  id        String   @id @default(cuid())
  type      String   // contoh: "MEN", "WOMEN"

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model ProductImage {
  id        String   @id @default(cuid())
  imageUrl  String   // Path to image file
  altText   String?  // Alternative text for accessibility
  order     Int      @default(0) // Order of images (0 = first/main image)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}
